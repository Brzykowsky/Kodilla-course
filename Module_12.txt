create database kodilla_course;

show DATABASES;

create user 'kodilla_user' identified with MYSQL_NATIVE_PASSWORD by 'kodilla_Pass123';

GRANT ALL PRIVILEGES ON kodilla_course.* to kodilla_user;

show TABLES;

CREATE TABLE USERS
(
    ID SERIAL PRIMARY KEY,
    FIRSTNAME VARCHAR(100),
    LASTNAME VARCHAR(100)
);

CREATE TABLE POSTS
(
    ID SERIAL PRIMARY KEY,
    USER_ID BIGINT UNSIGNED NOT NULL,
    BODY VARCHAR(1024),
    FOREIGN KEY (USER_ID) REFERENCES USERS(ID)
);

CREATE TABLE ISSUESLISTS
(
    ID SERIAL PRIMARY KEY,
    NAME VARCHAR(100)
);

CREATE TABLE ISSUES
(
    ID SERIAL PRIMARY KEY,
    ISSUESLIST_ID BIGINT UNSIGNED NOT NULL,
    SUMMARY VARCHAR(100),
    DESCRIPTION VARCHAR(1024),
    USER_ID_ASSIGNEDTO BIGINT UNSIGNED NOT NULL,
    FOREIGN KEY (ISSUESLIST_ID) REFERENCES ISSUESLISTS(ID),
    FOREIGN KEY (USER_ID_ASSIGNEDTO) REFERENCES USERS(ID)
);

SELECT * FROM ISSUESLISTS;
SELECT * FROM ISSUES;
SELECT * FROM USERS;
SELECT * FROM POSTS;

INSERT INTO ISSUESLISTS(NAME)
VALUES ('ToDo'),('In progress'),('Done');

INSERT INTO USERS (FIRSTNAME, LASTNAME)
VALUES ('John' , 'Smith'),
       ('Zachary', 'Lee'),
       ('Stephanie', 'Kovalsky'),
       ('Thomas', 'Landgren'),
       ('John', 'Thomson');

INSERT INTO POSTS (USER_ID, BODY)
VALUES (2, 'This is my first post too!'),
       (2, 'How are you?'),
       (1, 'Quite good, thanks bro!'),
       (4, 'Yo all! Here is Thomas!');

INSERT INTO ISSUES(ISSUESLIST_ID, SUMMARY, DESCRIPTION, USER_ID_ASSIGNEDTO)
VALUES (1,'Clean House', 'Vacuum the floor', 1),
       (1,'Do the laundry', 'Wash the clothes', 2),
       (1,'Buy groceries', 'Milk, bread, eggs', 3),
       (1,'Pay bills', 'Electricity, gas, water', 4),
       (1,'Walk the dog', 'In the park', 5),
       (2,'Update website', 'Change the homepage image', 1),
       (2,'Fix bugs', 'On the contact form', 2),
       (2,'Add new feature', 'Allow users to upload images', 3),
       (2,'Test performance', 'For large datasets', 4),
       (2,'Optimize code', 'Reduce page loading time', 5),
       (3,'Submit project', 'For review', 1),
       (3,'Prepare presentation', 'Slides and script', 2),
       (3,'Schedule meeting', 'With team members', 3),
       (3,'Assign tasks', 'To team members', 4),
       (3,'Give feedback', 'On team performance', 5);

COMMIT;

SELECT ID, FIRSTNAME FROM USERS
WHERE ID >= 3;

SELECT ID, FIRSTNAME FROM USERS
WHERE (ID >= 4 AND ID <= 10)
   OR ID = 1;

SELECT COUNT(*) FROM USERS;
SELECT SUM(ID), AVG(ID) FROM USERS;
SELECT MIN(ID), MAX(ID) FROM USERS;

SELECT U.FIRSTNAME, U.LASTNAME, P.BODY
FROM USERS U
         JOIN POSTS P ON U.ID = P.USER_ID;

SELECT USER_ID, COUNT(*) AS POSTS_NUMBER
FROM POSTS
GROUP BY USER_ID;

SELECT USER_ID, COUNT(*) AS POSTS_NUMBER
FROM POSTS
GROUP BY USER_ID
HAVING COUNT(*) > 1;

SELECT U.FIRSTNAME, U.LASTNAME, COUNT(*) AS POSTS_NUMBER
FROM USERS U JOIN POSTS P ON U.ID = P.USER_ID
GROUP BY P.USER_ID
HAVING COUNT(*) > 1
ORDER BY U.LASTNAME, U.FIRSTNAME;

SELECT I.SUMMARY, IL.NAME
FROM ISSUES I JOIN ISSUESLISTS IL ON I.ISSUESLIST_ID = IL.ID;

SELECT I.SUMMARY, U.FIRSTNAME, U.LASTNAME
FROM ISSUES I JOIN USERS U ON I.USER_ID_ASSIGNEDTO = U.ID;

SELECT U.FIRSTNAME, U.LASTNAME, COUNT(*) AS SUMMURY_NUMBER
FROM ISSUES I JOIN USERS U on I.USER_ID_ASSIGNEDTO = U.ID
GROUP BY I.USER_ID_ASSIGNEDTO;